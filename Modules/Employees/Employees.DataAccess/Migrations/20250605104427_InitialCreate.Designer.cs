// <auto-generated />
using System;
using Employees.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Employees.DataAccess.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20250605104427_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Employees.DataAccess.Entities.EmployeeAssignmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("AssignedAt")
                        .HasColumnType("date");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("RemovedAt")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("EmployeeAssignments");
                });

            modelBuilder.Entity("Employees.DataAccess.Entities.EmployeeCertificateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("IssuedAt")
                        .HasColumnType("date");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateOnly?>("ValidUntil")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCertificates");
                });

            modelBuilder.Entity("Employees.DataAccess.Entities.EmployeeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("FireDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Employees.DataAccess.Entities.EmployeeLicenseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("IssuedAt")
                        .HasColumnType("date");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateOnly?>("ValidUntil")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeLicenses");
                });

            modelBuilder.Entity("Employees.DataAccess.Entities.PositionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Doctor"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nurse"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Receptionist"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Technician"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Surgeon"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Pediatrician"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Cardiologist"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Neurologist"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Gynecologist"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Oncologist"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Dermatologist"
                        },
                        new
                        {
                            Id = 13,
                            Name = "OrthopedicSurgeon"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Anesthesiologist"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Radiologist"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Physiotherapist"
                        },
                        new
                        {
                            Id = 17,
                            Name = "OccupationalTherapist"
                        },
                        new
                        {
                            Id = 18,
                            Name = "MedicalAssistant"
                        },
                        new
                        {
                            Id = 19,
                            Name = "LaboratoryTechnician"
                        },
                        new
                        {
                            Id = 20,
                            Name = "PharmacyTechnician"
                        },
                        new
                        {
                            Id = 21,
                            Name = "HealthAdministrator"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Dietitian"
                        },
                        new
                        {
                            Id = 23,
                            Name = "ClinicalPsychologist"
                        },
                        new
                        {
                            Id = 24,
                            Name = "SocialWorker"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Pathologist"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Psychiatrist"
                        },
                        new
                        {
                            Id = 27,
                            Name = "FamilyDoctor"
                        },
                        new
                        {
                            Id = 28,
                            Name = "GeneralPractitioner"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Endocrinologist"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Urologist"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Gastroenterologist"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Pulmonologist"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Nephrologist"
                        },
                        new
                        {
                            Id = 34,
                            Name = "InfectiousDiseaseSpecialist"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Hematologist"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Rheumatologist"
                        },
                        new
                        {
                            Id = 37,
                            Name = "SurgeonAssistant"
                        },
                        new
                        {
                            Id = 38,
                            Name = "SurgicalNurse"
                        },
                        new
                        {
                            Id = 39,
                            Name = "EmergencyMedicalTechnician"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Paramedic"
                        },
                        new
                        {
                            Id = 41,
                            Name = "BiomedicalTechnician"
                        },
                        new
                        {
                            Id = 42,
                            Name = "RadiologicTechnologist"
                        },
                        new
                        {
                            Id = 43,
                            Name = "MedicalEquipmentTechnician"
                        },
                        new
                        {
                            Id = 44,
                            Name = "ITSupportSpecialist"
                        },
                        new
                        {
                            Id = 45,
                            Name = "HealthInformationTechnician"
                        },
                        new
                        {
                            Id = 46,
                            Name = "NetworkAdministrator"
                        },
                        new
                        {
                            Id = 47,
                            Name = "MedicalRecordsTechnician"
                        },
                        new
                        {
                            Id = 48,
                            Name = "PharmacyTechnologist"
                        },
                        new
                        {
                            Id = 49,
                            Name = "LaboratoryManager"
                        },
                        new
                        {
                            Id = 50,
                            Name = "QualityControlSpecialist"
                        });
                });

            modelBuilder.Entity("Employees.DataAccess.Entities.EmployeeAssignmentEntity", b =>
                {
                    b.HasOne("Employees.DataAccess.Entities.EmployeeEntity", "Employee")
                        .WithMany("EmployeeAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employees.DataAccess.Entities.PositionEntity", "Position")
                        .WithMany("Assignments")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Employees.DataAccess.Entities.EmployeeCertificateEntity", b =>
                {
                    b.HasOne("Employees.DataAccess.Entities.EmployeeEntity", "Employee")
                        .WithMany("EmployeeCertificates")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Employees.DataAccess.Entities.EmployeeLicenseEntity", b =>
                {
                    b.HasOne("Employees.DataAccess.Entities.EmployeeEntity", "Employee")
                        .WithMany("EmployeeLicenses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Employees.DataAccess.Entities.EmployeeEntity", b =>
                {
                    b.Navigation("EmployeeAssignments");

                    b.Navigation("EmployeeCertificates");

                    b.Navigation("EmployeeLicenses");
                });

            modelBuilder.Entity("Employees.DataAccess.Entities.PositionEntity", b =>
                {
                    b.Navigation("Assignments");
                });
#pragma warning restore 612, 618
        }
    }
}
